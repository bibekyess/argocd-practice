# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: postgresql-pv
#   labels:
#     type: local
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 20Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "./mnt/data"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: postgresql-pv-claim
# spec:
#   storageClassName: manual
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 20Gi
# ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mlflow-config
  namespace: mlflow
data:
  HOST: "192.168.0.29"
  MLFLOW_PORT: "5000"
  POSTGRESQL_PORT: "5432"
  DEFAULT_ARTIFACT_ROOT: "s3://mlflow"
  WORKERS: "2"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-deployment
  namespace: mlflow
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mlflow-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: mlflow-server
    spec:
      containers:
      - name: mlflow-server
        image: bibekyess/mlflow-server:v0.1
        args:
        - --host=0.0.0.0
        - --port=$(MLFLOW_PORT)
        - --backend-store-uri=postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(HOST):$(POSTGRESQL_PORT)/postgres
        - --default-artifact-root=$(DEFAULT_ARTIFACT_ROOT)
        - --workers= $(WORKERS)
        - --no-serve-artifacts
        # Can also do this: (`--` seperates the command line arguments and is a common convention in docker container)
          # args: ["--host=0.0.0.0", "--port=5000", "--backend-store-uri=/opt/mlflow/backend/", "--default-artifact-root=/opt/mlflow/artifacts/", "--workers=2"]
        envFrom:
        - configMapRef:
            name: mlflow-config
        - secretRef:
            name: mlflow-secret
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
---
# mlflow-service
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: mlflow
spec:
  selector:
    app: mlflow-server
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer  # Use "LoadBalancer" type to expose MLflow outside the cluster in Minikube
---
